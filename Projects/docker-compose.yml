version: '3.8'

services:
  genkeys:
    build:
      context: ./generate_key
      dockerfile: Dockerfile.genkey
    volumes:
      - ./Shared/keys:/Shared/keys
      - ./Sender/keys:/Sender/keys
      - ./Receiver/keys:/Receiver/keys
      - ./KRC/keys:/KRC/keys
      - ./KRA/kra1/keys:/KRA/kra1/keys
      - ./KRA/kra2/keys:/KRA/kra2/keys
      - ./KRA/kra3/keys:/KRA/kra3/keys
      - ./KRA/kra4/keys:/KRA/kra4/keys
      - ./KRA/kra5/keys:/KRA/kra5/keys
    command: ["python", "GenKey.py"]
    healthcheck:
      test: ["CMD", "python", "-c", "import os; assert os.path.exists('/Shared/keys/sender_public.pem')"]
      interval: 10s
      timeout: 5s
      retries: 3

  sender:
    build:
      context: .
      dockerfile: Sender/Dockerfile.sender
    depends_on:
      genkeys:
        condition: service_completed_successfully
    ports:
      - "5000:5000"
    volumes:
      - ./Sender/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys

  receiver:
    build:
      context: ./Receiver
      dockerfile: Dockerfile.receiver
    depends_on:
      genkeys:
        condition: service_completed_successfully
    ports:
      - "5001:5001"
    volumes:
      - ./Receiver/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys

  krc:
    build:
      context: .
      dockerfile: KRC/Dockerfile.KRC
    depends_on:
      genkeys:
        condition: service_completed_successfully
    ports:
      - "5002:5002"
    volumes:
      - ./KRC/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys

  kra:
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    depends_on:
      genkeys:
        condition: service_completed_successfully
    ports:
      - "5003-5007:5003-5007"
    volumes:
      - ./KRA/kra1/keys:/app/kra1/keys
      - ./KRA/kra2/keys:/app/kra2/keys
      - ./KRA/kra3/keys:/app/kra3/keys
      - ./KRA/kra4/keys:/app/kra4/keys
      - ./KRA/kra5/keys:/app/kra5/keys
      - ./Shared/keys:/app/Shared/keys
    command: ["/bin/sh", "-c", "python3 kra_script.py && python3 kra1/kra1.py && python3 kra2/kra2.py && python3 kra3/kra3.py && python3 kra4/kra4.py && python3 kra5/kra5.py"]