version: '3.8'

services:
  # generate-keys:
  #   image: generate-keys:lasted
  #   container_name: generate-keys
  #   build:
  #     context: ./Generate Keys
  #     dockerfile: Dockerfile.genkey
  #   volumes:
  #     - ./Shared/keys:/Shared/keys
  #     - ./Sender/keys:/Sender/keys
  #     - ./Receiver/keys:/Receiver/keys
  #     - ./KRC/keys:/KRC/keys
  #     - ./KRA/kra1/keys:/KRA/kra1/keys
  #     - ./KRA/kra2/keys:/KRA/kra2/keys
  #     - ./KRA/kra3/keys:/KRA/kra3/keys
  #     - ./KRA/kra4/keys:/KRA/kra4/keys
  #     - ./KRA/kra5/keys:/KRA/kra5/keys
  #   command: ["python", "GenKey.py"]
  #   healthcheck:
  #     test: ["CMD", "python", "-c", "import os; assert os.path.exists('/Shared/keys/sender_public.pem')"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3
  #   networks:
  #     app_network:
  #       ipv4_address: 192.168.1.10

  sender:
    image: sender:latest
    container_name: sender
    build:
      context: .
      dockerfile: Sender/Dockerfile.sender
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    ports:
      - "5000:5000"
      - "6000:6000"
    volumes:
      - ./Sender/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.11

  receiver:
    image: receiver:latest
    container_name: receiver
    build:
      context: ./Receiver
      dockerfile: Dockerfile.receiver
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    ports:
      - "5001:5001"
      - "5050:5050"
    volumes:
      - ./Receiver/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.12

  krc:
    image: krc:latest
    container_name: krc
    build:
      context: .
      dockerfile: KRC/Dockerfile.KRC
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    ports:
      - "5002:5002"
    volumes:
      - ./KRC/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.13

  kra-1:
    image: kra:latest
    container_name: kra-1
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    environment:
      KRA_ID: kra1
      LISTEN_PORT: 5003
    ports:
      - "5003:5003"
    volumes:
      - ./KRA/kra1/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.14

  kra-2:
    image: kra:latest
    container_name: kra-2
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    environment:
      KRA_ID: kra2
      LISTEN_PORT: 5004
    ports:
      - "5004:5004"
    volumes:
      - ./KRA/kra2/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.15

  kra-3:
    image: kra:latest
    container_name: kra-3
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    environment:
      KRA_ID: kra3
      LISTEN_PORT: 5005
    ports:
      - "5005:5005"
    volumes:
      - ./KRA/kra3/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.16

  kra-4:
    image: kra:latest
    container_name: kra-4
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    environment:
      KRA_ID: kra4
      LISTEN_PORT: 5006
    ports:
      - "5006:5006"
    volumes:
      - ./KRA/kra4/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.17

  kra-5:
    image: kra:latest
    container_name: kra-5
    build:
      context: ./KRA
      dockerfile: Dockerfile.KRA
    # depends_on:
    #   generate-keys:
    #     condition: service_completed_successfully
    environment:
      KRA_ID: kra5
      LISTEN_PORT: 5007
    ports:
      - "5007:5007"
    volumes:
      - ./KRA/kra5/keys:/app/keys
      - ./Shared/keys:/app/Shared/keys
    networks:
      app_network:
        ipv4_address: 192.168.1.18

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24